// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
//   output   = "../src/generated/prisma"
// }

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   clerkId         String    @unique
//   email           String    @unique
//   password        String    @default("")
//   country         String?   @default("")
//   userName        String    @unique
//   signUpCompleted Boolean   @default(false)
//   contestHistory  contest[]
//   customHistory   custom[]
//   trophy          Int       @default(0)
//   active          Boolean   @default(false)
//   createdAt       DateTime  @default(now())
//   updatedAt       DateTime  @updatedAt
// }

model QuizBank {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  question     String
  answer       Int
  options      String[]
  topic        String
  level        Int //  1 - 10
  type         QuizType
  explanation  String
  formatHints  String[]
  AiGenerated  Boolean  @default(false)
  Verified     Boolean  @default(false)
  useCount     Int      @default(0)
  likeCount    Int      @default(0)
  dislikeCount Int      @default(0)
  errorCount   Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

enum QuizType {
  mcq
  true_false
  order_sequence
}
